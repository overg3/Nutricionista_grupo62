/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nutricionistaapp.vistas;

import java.awt.Dimension;
import java.text.Normalizer;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nutricionistaapp.accesoDatos.PacienteData;
import nutricionistaapp.entidades.Paciente;

/**
 *
 * @author Usuario
 */
public class BuscaryModificarPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form ModificarPaciente
     *
     *
     * @param frameSize
     */
    public BuscaryModificarPaciente(Dimension frameSize) {
        initComponents();
        centrarVentana(frameSize);
        armarCabecera();
    }
    private List<Paciente> listaPacientes;

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollBar1 = new javax.swing.JScrollBar();
        jComboBox1 = new javax.swing.JComboBox<>();
        checkbox1 = new java.awt.Checkbox();
        buttonSalir = new java.awt.Button();
        jButtonSalir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelnombrePaciente = new javax.swing.JLabel();
        jTextFieldnombre = new javax.swing.JTextField();
        jLabelApellidoPaciente = new javax.swing.JLabel();
        jTextFieldapellido = new javax.swing.JTextField();
        jLabelDNI = new javax.swing.JLabel();
        jTextFieldDNI = new javax.swing.JTextField();
        jButtonQuitarFiltros = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableresultbusqueda = new javax.swing.JTable();
        jButtonModificar = new javax.swing.JButton();
        jButtonbajadepaciente = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        checkbox1.setLabel("checkbox1");

        buttonSalir.setLabel("button1");
        buttonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalirActionPerformed(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Buscar / Modificar / Dar de baja Paciente");

        jButtonSalir.setBackground(new java.awt.Color(255, 0, 51));
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Criterios de Busqueda", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabelnombrePaciente.setText("Por nombre de Paciente: ");

        jTextFieldnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldnombreActionPerformed(evt);
            }
        });
        jTextFieldnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldnombreKeyReleased(evt);
            }
        });

        jLabelApellidoPaciente.setText("Por apellido de Paciente:");

        jTextFieldapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldapellidoActionPerformed(evt);
            }
        });
        jTextFieldapellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldapellidoKeyReleased(evt);
            }
        });

        jLabelDNI.setText("Por DNI de paciente:");

        jTextFieldDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDNIActionPerformed(evt);
            }
        });
        jTextFieldDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDNIKeyReleased(evt);
            }
        });

        jButtonQuitarFiltros.setText("Quitar Filtros");
        jButtonQuitarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabelnombrePaciente)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelApellidoPaciente)
                    .addComponent(jLabelDNI))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jButtonQuitarFiltros)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelnombrePaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellidoPaciente)
                    .addComponent(jTextFieldapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonQuitarFiltros))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDNI)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jTableresultbusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableresultbusqueda.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableresultbusqueda.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTableresultbusquedaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTableresultbusqueda);

        jButtonModificar.setBackground(new java.awt.Color(102, 255, 102));
        jButtonModificar.setText("Modicar Datos");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonbajadepaciente.setText("Dar de Baja a paciente");
        jButtonbajadepaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbajadepacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonbajadepaciente)
                .addGap(135, 135, 135)
                .addComponent(jButtonSalir)
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonbajadepaciente)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonModificar))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSalirActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed

        // Obtiene el índice de la fila seleccionada en un componente de tabla. 
        try {
            int filaseleccionada = jTableresultbusqueda.getSelectedRow();
            String dni = (String) jTableresultbusqueda.getValueAt(filaseleccionada, 2);
            Paciente paciente = PacienteData.buscarPacienteDNI(dni);

            //Crea una instancia de la clase ModificarPaciente,
            // para modificar los datos del paciente. Se pasa el objeto paciente
            //como argumento al constructor de ModificarPaciente.
            //System.out.println(paciente.getNombre());
            ModificarPaciente mp = new ModificarPaciente(null, true, paciente);
            mp.setVisible(true);

        } catch (ArrayIndexOutOfBoundsException e) {

            JOptionPane.showMessageDialog(null, "Debe seleccionar un paciente.");

        }


    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jTextFieldnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldnombreActionPerformed
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldnombreActionPerformed

    private void jTextFieldapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldapellidoActionPerformed
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldapellidoActionPerformed

    private void jTextFieldDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDNIActionPerformed
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldDNIActionPerformed

    private void jTextFieldnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldnombreKeyReleased
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldnombreKeyReleased

    private void jTextFieldapellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldapellidoKeyReleased
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldapellidoKeyReleased

    private void jTextFieldDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDNIKeyReleased
        // TODO add your handling code here:

        filtrarLista();
    }//GEN-LAST:event_jTextFieldDNIKeyReleased

    private void jButtonQuitarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarFiltrosActionPerformed
        // TODO add your handling code here:
        jTextFieldnombre.setText("");
        jTextFieldapellido.setText("");
        jTextFieldDNI.setText("");
        jButtonQuitarFiltros.setEnabled(false);

        filtrarLista();


    }//GEN-LAST:event_jButtonQuitarFiltrosActionPerformed

    private void jButtonbajadepacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbajadepacienteActionPerformed
        // TODO add your handling code here:
//Obtiene el índice de la fila seleccionada en un componente de tabla.
//Obtiene el valor de la columna correspondiente al número de DNI del 
//paciente en la fila seleccionada. Esto asume que la columna 2 contiene el DNI del paciente.
//
        try {
            int filaseleccionada = jTableresultbusqueda.getSelectedRow();
            String dni = (String) jTableresultbusqueda.getValueAt(filaseleccionada, 2);
            Paciente paciente = PacienteData.buscarPacienteDNI(dni);

            PacienteData.bajaPaciente(paciente.getIdPaciente());

            JOptionPane.showMessageDialog(null, "Paciente eliminado con éxito.");

            filtrarLista();

        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un paciente. ");
        }


    }//GEN-LAST:event_jButtonbajadepacienteActionPerformed

    private void jTableresultbusquedaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableresultbusquedaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableresultbusquedaAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonSalir;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonQuitarFiltros;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonbajadepaciente;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabelApellidoPaciente;
    private javax.swing.JLabel jLabelDNI;
    private javax.swing.JLabel jLabelnombrePaciente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableresultbusqueda;
    private javax.swing.JTextField jTextFieldDNI;
    private javax.swing.JTextField jTextFieldapellido;
    private javax.swing.JTextField jTextFieldnombre;
    // End of variables declaration//GEN-END:variables

    //Centrar Ventana
    private void centrarVentana(Dimension frameSize) {
        Dimension internalFrameSize = this.getSize();

        setLocation((frameSize.width - internalFrameSize.width) / 2,
                (frameSize.height - internalFrameSize.height) / 2);
    }

    private final DefaultTableModel modelo = new DefaultTableModel() {
       
        /*esta configuración hace que todas las celdas en la tabla 
        sean de solo lectura, y el usuario no podrá modificar 
        su contenido directamente a través de la interfaz de usuario
        @Override*/

        public boolean isCellEditable(int filas, int columnas) {
            return false;
        }
    };

    
    //configura la estructura de una tabla, obtiene datos de pacientes, y 
    //los muestra en la tabla en una GUI. Los datos de los pacientes se obtienen 
    //desde una base de datos y se muestran.
    
    private void armarCabecera() {

        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("DNI");
        modelo.addColumn("Telefono");
        modelo.addColumn("Domicilio");
        modelo.addColumn("E-mail");
        jTableresultbusqueda.setModel(modelo);

        listaPacientes = PacienteData.listarPacientes();
        for (Paciente paciente : listaPacientes) {
            Object[] fila = {paciente.getNombre(), paciente.getApellido(),
                paciente.getDni(), paciente.getTelefono(), paciente.getDomicilio(), paciente.getEmail()};
            modelo.addRow(fila);
        }

        jTableresultbusqueda.setModel(modelo);

    }

    private void limpiarTabla() {
        modelo.setRowCount(0);

    }

    //este método permite al usuario realizar una búsqueda de pacientes en la lista 
    //filtrando los resultados según los valores ingresados en los campos de búsqueda
    //jTextFieldnombre, jTextFieldapellido y jTextFieldDNI. Los pacientes que 
    //cumplen con los criterios de búsqueda se muestran en la tabla.
    private void filtrarLista() {

        limpiarTabla();
        listaPacientes = PacienteData.listarPacientes();

        String PorNombre = quitarAcentos(jTextFieldnombre.getText().trim().toLowerCase());
        String PorApellido = quitarAcentos(jTextFieldapellido.getText().trim().toLowerCase());
        String PorDni = jTextFieldDNI.getText().trim();

        for (Paciente paciente : listaPacientes) {

            String nombre = quitarAcentos(paciente.getNombre().trim().toLowerCase());
            String apellido = quitarAcentos(paciente.getApellido().trim().toLowerCase());
            String dni = paciente.getDni().trim();
            String telefono = paciente.getTelefono().trim();

            if (nombre.startsWith(PorNombre) && apellido.startsWith(PorApellido)
                    && dni.startsWith(PorDni)) {

                Object[] fila = {paciente.getNombre(), paciente.getApellido(),
                    paciente.getDni(), paciente.getTelefono(), paciente.getDomicilio(), paciente.getEmail()};
                modelo.addRow(fila);

            }
        }
    }

    private String quitarAcentos(String cadena) {
        // Normalizer se usa para normalizar texto, en este caso para quitar acentos
        // Se retorna la cadena con los caracteres diacriticos (acentos) reemplazados por cadenas vacías 
        String cadenaNormalizada = Normalizer.normalize(cadena, Normalizer.Form.NFD);
        return cadenaNormalizada.replaceAll("\\p{InCombiningDiacriticalMarks}+", "");
    }

}
